cmake_minimum_required(VERSION 3.8)
project(bc_node)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(fognav_msgs REQUIRED)
find_package(builtin_interfaces REQUIRED)

include_directories(include)

add_library(${PROJECT_NAME}_lib
  src/bc_node.cpp)

ament_target_dependencies(${PROJECT_NAME}_lib
  rclcpp
  fognav_msgs
  builtin_interfaces
)

add_executable(${PROJECT_NAME}
  src/bc_node_main.cpp)
target_link_libraries(${PROJECT_NAME}
  ${PROJECT_NAME}_lib)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)

  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  # set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  # set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

install(TARGETS
  bc_node
  DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY
  params
  launch
  DESTINATION share/${PROJECT_NAME}/
)
ament_package()
